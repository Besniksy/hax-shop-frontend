{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"../../helpers/axios\";\nimport { authConstants } from \"./constants\";\nexport var login = function login(user) {\n  console.log(user);\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, _res$data, token, _user;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: authConstants.LOGIN_REQUEST\n              });\n              _context.next = 3;\n              return axios.post('/admin/signin', _objectSpread({}, user));\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                _res$data = res.data, token = _res$data.token, _user = _res$data.user;\n                localStorage.setItem('token', token);\n                dispatch({\n                  type: authConstants.LOGIN_SUCCESS,\n                  payload: {\n                    token: token,\n                    user: _user\n                  }\n                });\n              }\n\n              dispatch({\n                type: authConstants.LOGIN_REQUEST,\n                payload: _objectSpread({}, user)\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/authActions.js"],"names":["axios","authConstants","login","user","console","log","dispatch","type","LOGIN_REQUEST","post","res","status","data","token","localStorage","setItem","LOGIN_SUCCESS","payload"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAEC,IAAF,EAAW;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA;AAAA,wEAAO,iBAAOG,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEHA,cAAAA,QAAQ,CAAC;AAACC,gBAAAA,IAAI,EAAEN,aAAa,CAACO;AAArB,eAAD,CAAR;AAFG;AAAA,qBAGeR,KAAK,CAACS,IAAN,CAAW,eAAX,oBACXN,IADW,EAHf;;AAAA;AAGGO,cAAAA,GAHH;;AAOH,kBAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AAAA,4BACKD,GAAG,CAACE,IADT,EACXC,KADW,aACXA,KADW,EACJV,KADI,aACJA,IADI;AAElBW,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACAP,gBAAAA,QAAQ,CAAC;AACLC,kBAAAA,IAAI,EAAEN,aAAa,CAACe,aADf;AAELC,kBAAAA,OAAO,EAAE;AACLJ,oBAAAA,KAAK,EAALA,KADK;AACEV,oBAAAA,IAAI,EAAJA;AADF;AAFJ,iBAAD,CAAR;AAMH;;AAEDG,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEN,aAAa,CAACO,aADf;AAELS,gBAAAA,OAAO,oBACAd,IADA;AAFF,eAAD,CAAR;;AAlBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAyBH,CA5BM","sourcesContent":["import axios from \"../../helpers/axios\"\r\nimport { authConstants } from \"./constants\"\r\n\r\nexport const login = ( user) => {\r\n\r\n    console.log(user)\r\n    return async (dispatch) => {\r\n\r\n        dispatch({type: authConstants.LOGIN_REQUEST})\r\n        const res = await axios.post('/admin/signin', {\r\n            ...user\r\n        })\r\n\r\n        if(res.status === 200){\r\n            const {token, user } = res.data\r\n            localStorage.setItem('token', token)\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            })\r\n        }\r\n\r\n        dispatch({\r\n            type: authConstants.LOGIN_REQUEST,\r\n            payload: {\r\n                ...user\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}