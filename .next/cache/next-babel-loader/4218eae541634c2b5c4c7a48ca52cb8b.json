{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"../../helpers/axios\";\nimport { authConstants } from \"./constants\";\nexport const login = user => {\n  console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post('/admin/signin', _objectSpread({}, user));\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/authActions.js"],"names":["axios","authConstants","login","user","console","log","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,KAAK,GAAKC,IAAF,IAAW;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO,MAAOG,QAAP,IAAoB;AAEvBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,aAAa,CAACO;AAArB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,eAAX,oBACXP,IADW,EAAlB;;AAIA,QAAGM,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClB,YAAM;AAACC,QAAAA,KAAD;AAAQT,QAAAA;AAAR,UAAiBM,GAAG,CAACI,IAA3B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAN,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN,aAAa,CAACe,aADf;AAELC,QAAAA,OAAO,EAAE;AACLL,UAAAA,KADK;AACET,UAAAA;AADF;AAFJ,OAAD,CAAR;AAMH,KATD,MASK;AACD,UAAGM,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBL,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEN,aAAa,CAACiB,aADf;AAELD,UAAAA,OAAO,EAAE;AAACE,YAAAA,KAAK,EAAEV,GAAG,CAACI,IAAJ,CAASM;AAAjB;AAFJ,SAAD,CAAR;AAIH;AACJ;AAGJ,GA1BD;AA2BH,CA9BM","sourcesContent":["import axios from \"../../helpers/axios\"\r\nimport { authConstants } from \"./constants\"\r\n\r\nexport const login = ( user) => {\r\n\r\n    console.log(user)\r\n    return async (dispatch) => {\r\n\r\n        dispatch({type: authConstants.LOGIN_REQUEST})\r\n        const res = await axios.post('/admin/signin', {\r\n            ...user\r\n        })\r\n\r\n        if(res.status === 200){\r\n            const {token, user } = res.data\r\n            localStorage.setItem('token', token)\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            })\r\n        }else{\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: {error: res.data.error}\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}