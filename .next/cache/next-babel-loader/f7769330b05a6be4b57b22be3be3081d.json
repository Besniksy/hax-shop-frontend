{"ast":null,"code":"import axiosInstance from \"../../helpers/axios\";\nimport { productConstants } from \"./constants\";\nexport const getProductsBySlug = slug => {\n  return async dispatch => {\n    const res = await axiosInstance.get(`/products/${slug}?name=`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data\n      });\n    }\n  };\n};\nexport const getAllProducts = () => {\n  return async dispatch => {\n    const res = await axiosInstance.get(`/products`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_FROM_PRODUCTS,\n        payload: res.data\n      });\n    }\n  };\n};\nexport const getCategoryProductBySearch = (slug, search) => {\n  return async dispatch => {\n    const res = await axiosInstance.get(`/products/${slug}?name=${search}`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_CATEGORY_PRODUCTS_BY_SEARCH_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: productConstants.GET_CATEGORY_PRODUCTS_BY_SEARCH_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const getAllProductBySearch = search => {\n  return async dispatch => {\n    const res = await axiosInstance.get(`/allproducts?name=${search}`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_BY_SEARCH,\n        payload: res.data\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/productsActions.js"],"names":["axiosInstance","productConstants","getProductsBySlug","slug","dispatch","res","get","status","type","GET_PRODUCTS_BY_SLUG","payload","data","getAllProducts","GET_ALL_PRODUCTS_FROM_PRODUCTS","getCategoryProductBySearch","search","GET_CATEGORY_PRODUCTS_BY_SEARCH_SUCCESS","GET_CATEGORY_PRODUCTS_BY_SEARCH_FAILURE","error","getAllProductBySearch","GET_ALL_PRODUCTS_BY_SEARCH"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,GAAG,GAAG,MAAML,aAAa,CAACM,GAAd,CAAmB,aAAYH,IAAK,QAApC,CAAlB;;AACA,QAAGE,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACQ,oBADlB;AAELC,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH;AACJ,GARD;AASH,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAO,MAAMR,QAAN,IAAkB;AACrB,UAAMC,GAAG,GAAG,MAAML,aAAa,CAACM,GAAd,CAAmB,WAAnB,CAAlB;;AACA,QAAGD,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACY,8BADlB;AAELH,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH;AACJ,GARD;AASH,CAVM;AAYP,OAAO,MAAMG,0BAA0B,GAAG,CAACX,IAAD,EAAOY,MAAP,KAAkB;AACxD,SAAO,MAAMX,QAAN,IAAkB;AAElB,UAAMC,GAAG,GAAG,MAAML,aAAa,CAACM,GAAd,CAAmB,aAAYH,IAAK,SAAQY,MAAO,EAAnD,CAAlB;;AAEH,QAAGV,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACe,uCADlB;AAELN,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH,KALD,MAKK;AACDP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACgB,uCADlB;AAELP,QAAAA,OAAO,EAAE;AAACQ,UAAAA,KAAK,EAAEb,GAAG,CAACM,IAAJ,CAASO;AAAjB;AAFJ,OAAD,CAAR;AAIH;AACJ,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAMC,qBAAqB,GAAIJ,MAAD,IAAY;AAC7C,SAAO,MAAMX,QAAN,IAAkB;AACrB,UAAMC,GAAG,GAAG,MAAML,aAAa,CAACM,GAAd,CAAmB,qBAAoBS,MAAO,EAA9C,CAAlB;;AACA,QAAGV,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACmB,0BADlB;AAELV,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH;AACJ,GARD;AASH,CAVM","sourcesContent":["import axiosInstance from \"../../helpers/axios\"\r\nimport { productConstants } from \"./constants\"\r\n\r\nexport const getProductsBySlug = (slug) => {\r\n    return async dispatch => {\r\n        const res = await axiosInstance.get(`/products/${slug}?name=`)\r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: productConstants.GET_PRODUCTS_BY_SLUG,\r\n                payload: res.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllProducts = () => {\r\n    return async dispatch => {\r\n        const res = await axiosInstance.get(`/products`)\r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: productConstants.GET_ALL_PRODUCTS_FROM_PRODUCTS,\r\n                payload: res.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCategoryProductBySearch = (slug, search) => {\r\n    return async dispatch => {\r\n        \r\n           const res = await axiosInstance.get(`/products/${slug}?name=${search}`)\r\n        \r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: productConstants.GET_CATEGORY_PRODUCTS_BY_SEARCH_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type: productConstants.GET_CATEGORY_PRODUCTS_BY_SEARCH_FAILURE,\r\n                payload: {error: res.data.error}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllProductBySearch = (search) => {\r\n    return async dispatch => {\r\n        const res = await axiosInstance.get(`/allproducts?name=${search}`)\r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: productConstants.GET_ALL_PRODUCTS_BY_SEARCH,\r\n                payload: res.data\r\n            })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}