{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { categoryConstants, productConstants } from \"./constants\";\nexport var getInitialData = function getInitialData() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, _res$data, categories, products;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post('/initialData');\n\n            case 2:\n              res = _context.sent;\n\n              if (res.status == 200) {\n                _res$data = res.data, categories = _res$data.categories, products = _res$data.products;\n                dispatch({\n                  type: categoryConstants.GET_CATEGORIES_SUCCESS,\n                  payload: {\n                    categories: categories\n                  }\n                });\n                dispatch({\n                  type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n                  payload: {\n                    products: products\n                  }\n                });\n              }\n\n              console.log(res);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/initialDataActions.js"],"names":["categoryConstants","productConstants","getInitialData","dispatch","axios","post","res","status","data","categories","products","type","GET_CATEGORIES_SUCCESS","payload","GET_ALL_PRODUCTS_SUCCESS","console","log"],"mappings":";;AAAA,SAASA,iBAAT,EAA4BC,gBAA5B,QAAoD,aAApD;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAChC;AAAA,wEAAO,iBAAMC,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeC,KAAK,CAACC,IAAN,CAAW,cAAX,CADf;;AAAA;AACGC,cAAAA,GADH;;AAEH,kBAAGA,GAAG,CAACC,MAAJ,IAAc,GAAjB,EAAqB;AAAA,4BACcD,GAAG,CAACE,IADlB,EACVC,UADU,aACVA,UADU,EACEC,QADF,aACEA,QADF;AAEjBP,gBAAAA,QAAQ,CAAC;AACLQ,kBAAAA,IAAI,EAAEX,iBAAiB,CAACY,sBADnB;AAELC,kBAAAA,OAAO,EAAE;AAACJ,oBAAAA,UAAU,EAAVA;AAAD;AAFJ,iBAAD,CAAR;AAIAN,gBAAAA,QAAQ,CAAC;AACLQ,kBAAAA,IAAI,EAAEV,gBAAgB,CAACa,wBADlB;AAELD,kBAAAA,OAAO,EAAE;AAAEH,oBAAAA,QAAQ,EAARA;AAAF;AAFJ,iBAAD,CAAR;AAIH;;AACDK,cAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;;AAbG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAeH,CAhBM","sourcesContent":["import { categoryConstants, productConstants } from \"./constants\"\r\n\r\nexport const getInitialData = () => {\r\n    return async dispatch => {\r\n        const res = await axios.post('/initialData')\r\n        if(res.status == 200){\r\n            const {categories, products} = res.data \r\n            dispatch({\r\n                type: categoryConstants.GET_CATEGORIES_SUCCESS,\r\n                payload: {categories}\r\n            })\r\n            dispatch({\r\n                type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n                payload: { products }\r\n            })\r\n        }\r\n        console.log(res)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}