{"ast":null,"code":"import axiosInstance from \"../../helpers/axios\";\nimport { productConstants } from \"./constants\";\nexport const getProductsBySlug = slug => {\n  return async dispatch => {\n    const res = await axiosInstance.get(`/products/${slug}`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_SLUG,\n        payload: res.data\n      });\n    }\n  };\n};\nexport const getProductsByMainCategory = cate => {\n  return async dispatch => {\n    const res = await axiosInstance.get(`/productsbycategory/${cate}`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_PRODUCTS_BY_MAIN_CATEGORY,\n        payload: res.data\n      });\n    }\n  };\n};\nexport const getAllProducts = () => {\n  return async dispatch => {\n    const res = await axiosInstance.get(`/products`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_FROM_PRODUCTS,\n        payload: res.data\n      });\n    }\n  };\n};\nexport const getCategoryProductBySearch = (slug, search) => {\n  return async dispatch => {\n    let res;\n\n    if (slug !== undefined) {\n      res = await axiosInstance.get(`/productssearch/${slug}?name=${search}`);\n    }\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_CATEGORY_PRODUCTS_BY_SEARCH_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      dispatch({\n        type: productConstants.GET_CATEGORY_PRODUCTS_BY_SEARCH_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const getAllProductBySearch = search => {\n  return async dispatch => {\n    const res = await axiosInstance.get(`/allproducts?name=${search}`);\n\n    if (res.status === 200) {\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_BY_SEARCH,\n        payload: res.data\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/productsActions.js"],"names":["axiosInstance","productConstants","getProductsBySlug","slug","dispatch","res","get","status","type","GET_PRODUCTS_BY_SLUG","payload","data","getProductsByMainCategory","cate","GET_PRODUCTS_BY_MAIN_CATEGORY","getAllProducts","GET_ALL_PRODUCTS_FROM_PRODUCTS","getCategoryProductBySearch","search","undefined","GET_CATEGORY_PRODUCTS_BY_SEARCH_SUCCESS","GET_CATEGORY_PRODUCTS_BY_SEARCH_FAILURE","error","getAllProductBySearch","GET_ALL_PRODUCTS_BY_SEARCH"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,IAAD,IAAU;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,GAAG,GAAG,MAAML,aAAa,CAACM,GAAd,CAAmB,aAAYH,IAAK,EAApC,CAAlB;;AACA,QAAGE,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACQ,oBADlB;AAELC,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH;AACJ,GARD;AASH,CAVM;AAYP,OAAO,MAAMC,yBAAyB,GAAIC,IAAD,IAAU;AAC/C,SAAO,MAAMT,QAAN,IAAkB;AACrB,UAAMC,GAAG,GAAG,MAAML,aAAa,CAACM,GAAd,CAAmB,uBAAsBO,IAAK,EAA9C,CAAlB;;AACA,QAAGR,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACa,6BADlB;AAELJ,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH;AACJ,GARD;AASH,CAVM;AAYP,OAAO,MAAMI,cAAc,GAAG,MAAM;AAChC,SAAO,MAAMX,QAAN,IAAkB;AACrB,UAAMC,GAAG,GAAG,MAAML,aAAa,CAACM,GAAd,CAAmB,WAAnB,CAAlB;;AACA,QAAGD,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACe,8BADlB;AAELN,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH;AACJ,GARD;AASH,CAVM;AAYP,OAAO,MAAMM,0BAA0B,GAAG,CAACd,IAAD,EAAOe,MAAP,KAAkB;AACxD,SAAO,MAAMd,QAAN,IAAkB;AACrB,QAAIC,GAAJ;;AACA,QAAGF,IAAI,KAAKgB,SAAZ,EAAsB;AAClBd,MAAAA,GAAG,GAAG,MAAML,aAAa,CAACM,GAAd,CAAmB,mBAAkBH,IAAK,SAAQe,MAAO,EAAzD,CAAZ;AACH;;AACD,QAAGb,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACmB,uCADlB;AAELV,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH,KALD,MAKK;AACDP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACoB,uCADlB;AAELX,QAAAA,OAAO,EAAE;AAACY,UAAAA,KAAK,EAAEjB,GAAG,CAACM,IAAJ,CAASW;AAAjB;AAFJ,OAAD,CAAR;AAIH;AACJ,GAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMC,qBAAqB,GAAIL,MAAD,IAAY;AAC7C,SAAO,MAAMd,QAAN,IAAkB;AACrB,UAAMC,GAAG,GAAG,MAAML,aAAa,CAACM,GAAd,CAAmB,qBAAoBY,MAAO,EAA9C,CAAlB;;AACA,QAAGb,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAsB;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,gBAAgB,CAACuB,0BADlB;AAELd,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH;AACJ,GARD;AASH,CAVM","sourcesContent":["import axiosInstance from \"../../helpers/axios\"\r\nimport { productConstants } from \"./constants\"\r\n\r\nexport const getProductsBySlug = (slug) => {\r\n    return async dispatch => {\r\n        const res = await axiosInstance.get(`/products/${slug}`)\r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: productConstants.GET_PRODUCTS_BY_SLUG,\r\n                payload: res.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getProductsByMainCategory = (cate) => {\r\n    return async dispatch => {\r\n        const res = await axiosInstance.get(`/productsbycategory/${cate}`)\r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: productConstants.GET_PRODUCTS_BY_MAIN_CATEGORY,\r\n                payload: res.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllProducts = () => {\r\n    return async dispatch => {\r\n        const res = await axiosInstance.get(`/products`)\r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: productConstants.GET_ALL_PRODUCTS_FROM_PRODUCTS,\r\n                payload: res.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCategoryProductBySearch = (slug, search) => {\r\n    return async dispatch => {\r\n        let res\r\n        if(slug !== undefined){\r\n            res = await axiosInstance.get(`/productssearch/${slug}?name=${search}`)\r\n        }\r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: productConstants.GET_CATEGORY_PRODUCTS_BY_SEARCH_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type: productConstants.GET_CATEGORY_PRODUCTS_BY_SEARCH_FAILURE,\r\n                payload: {error: res.data.error}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllProductBySearch = (search) => {\r\n    return async dispatch => {\r\n        const res = await axiosInstance.get(`/allproducts?name=${search}`)\r\n        if(res.status === 200){\r\n            dispatch({\r\n                type: productConstants.GET_ALL_PRODUCTS_BY_SEARCH,\r\n                payload: res.data\r\n            })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}