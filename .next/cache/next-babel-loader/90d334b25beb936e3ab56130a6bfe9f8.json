{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axiosInstance from \"../../helpers/axios\";\nimport { productConstants } from \"./constants\";\nexport var addProduct = function addProduct(form) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: productConstants.GET_ALL_PRODUCTS_REQUEST\n              });\n              _context.next = 3;\n              return axiosInstance.post('/product/create', form);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status === 201) {\n                dispatch({\n                  type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n                  payload: {\n                    products: res.data.product\n                  }\n                });\n              } else {\n                dispatch({\n                  type: productConstants.GET_ALL_PRODUCTS_FAILURE,\n                  payload: res.data.error\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; // export const addProduct = (form) => {\n//     return async dispatch => {\n//         const res = await axiosInstance.post('product/create', form)\n//         console.log(res)\n//     }\n// }","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/productsActions.js"],"names":["axiosInstance","productConstants","addProduct","form","dispatch","type","GET_ALL_PRODUCTS_REQUEST","post","res","status","GET_ALL_PRODUCTS_SUCCESS","payload","products","data","product","GET_ALL_PRODUCTS_FAILURE","error"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAChC;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACHA,cAAAA,QAAQ,CAAC;AAACC,gBAAAA,IAAI,EAAEJ,gBAAgB,CAACK;AAAxB,eAAD,CAAR;AADG;AAAA,qBAEeN,aAAa,CAACO,IAAd,CAAmB,iBAAnB,EAAsCJ,IAAtC,CAFf;;AAAA;AAEGK,cAAAA,GAFH;;AAGH,kBAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AAClBL,gBAAAA,QAAQ,CAAC;AACLC,kBAAAA,IAAI,EAAEJ,gBAAgB,CAACS,wBADlB;AAELC,kBAAAA,OAAO,EAAE;AAACC,oBAAAA,QAAQ,EAAEJ,GAAG,CAACK,IAAJ,CAASC;AAApB;AAFJ,iBAAD,CAAR;AAIH,eALD,MAKK;AACDV,gBAAAA,QAAQ,CAAC;AACLC,kBAAAA,IAAI,EAAEJ,gBAAgB,CAACc,wBADlB;AAELJ,kBAAAA,OAAO,EAAEH,GAAG,CAACK,IAAJ,CAASG;AAFb,iBAAD,CAAR;AAIH;;AAbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAeH,CAhBM,C,CAkBP;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axiosInstance from \"../../helpers/axios\"\r\nimport { productConstants } from \"./constants\"\r\n\r\nexport const addProduct = (form) => {\r\n    return async dispatch => {\r\n        dispatch({type: productConstants.GET_ALL_PRODUCTS_REQUEST})\r\n        const res = await axiosInstance.post('/product/create', form)\r\n        if(res.status === 201){\r\n            dispatch({\r\n                type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n                payload: {products: res.data.product} \r\n            })\r\n        }else{\r\n            dispatch({\r\n                type: productConstants.GET_ALL_PRODUCTS_FAILURE,\r\n                payload: res.data.error\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n// export const addProduct = (form) => {\r\n//     return async dispatch => {\r\n//         const res = await axiosInstance.post('product/create', form)\r\n//         console.log(res)\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}