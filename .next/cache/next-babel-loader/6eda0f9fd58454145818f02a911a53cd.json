{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { authConstants, cartConstants } from \"./constants\";\nimport axios from \"../helpers/axios\"; // new update signup action\n\nexport var signup = function signup(user) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, _res$data, token, _user, error, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: authConstants.SIGNUP_REQUEST\n              });\n              _context.next = 4;\n              return axios.post(\"/signup\", user);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.status === 201) {\n                dispatch({\n                  type: authConstants.SIGNUP_SUCCESS\n                });\n                _res$data = res.data, token = _res$data.token, _user = _res$data.user;\n                localStorage.setItem(\"token\", token);\n                localStorage.setItem(\"user\", JSON.stringify(_user));\n                dispatch({\n                  type: authConstants.LOGIN_SUCCESS,\n                  payload: {\n                    token: token,\n                    user: _user\n                  }\n                });\n              } else {\n                error = res.data.error;\n                dispatch({\n                  type: authConstants.SIGNUP_FAILURE,\n                  payload: {\n                    error: error\n                  }\n                });\n              }\n\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              data = _context.t0.response.data;\n              dispatch({\n                type: authConstants.SIGNUP_FAILURE,\n                payload: {\n                  error: data.error\n                }\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var login = function login(user) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, _res$data2, token, _user2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: authConstants.LOGIN_REQUEST\n              });\n              _context2.next = 3;\n              return axios.post(\"/signin\", _objectSpread({}, user));\n\n            case 3:\n              res = _context2.sent;\n\n              if (res.status === 200) {\n                _res$data2 = res.data, token = _res$data2.token, _user2 = _res$data2.user;\n                localStorage.setItem(\"token\", token);\n                localStorage.setItem(\"user\", JSON.stringify(_user2));\n                dispatch({\n                  type: authConstants.LOGIN_SUCCESS,\n                  payload: {\n                    token: token,\n                    user: _user2\n                  }\n                });\n              } else {\n                if (res.status === 400) {\n                  dispatch({\n                    type: authConstants.LOGIN_FAILURE,\n                    payload: {\n                      error: res.data.error\n                    }\n                  });\n                }\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var isUserLoggedIn = function isUserLoggedIn() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var token, user;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              token = localStorage.getItem(\"token\");\n\n              if (token) {\n                user = JSON.parse(localStorage.getItem(\"user\"));\n                dispatch({\n                  type: authConstants.LOGIN_SUCCESS,\n                  payload: {\n                    token: token,\n                    user: user\n                  }\n                });\n              } else {\n                dispatch({\n                  type: authConstants.LOGIN_FAILURE,\n                  payload: {\n                    error: \"Failed to login\"\n                  }\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var signout = function signout() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: authConstants.LOGOUT_REQUEST\n              }); // localStorage.removeItem('user');\n              // localStorage.removeItem('token');\n\n              localStorage.clear();\n              dispatch({\n                type: authConstants.LOGOUT_SUCCESS\n              }); // dispatch({ type: cartConstants.RESET_CART });\n              //const res = await axios.post(`/admin/signout`);\n              // if(res.status === 200){\n              // }else{\n              //     dispatch({\n              //         type: authConstants.LOGOUT_FAILURE,\n              //         payload: { error: res.data.error }\n              //     });\n              // }\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/authActions.js"],"names":["authConstants","cartConstants","axios","signup","user","dispatch","type","SIGNUP_REQUEST","post","res","status","SIGNUP_SUCCESS","data","token","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","error","SIGNUP_FAILURE","response","login","LOGIN_REQUEST","LOGIN_FAILURE","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS"],"mappings":";;;;;;;;AACA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,aAA7C;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CAEA;;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AAC9B;AAAA,wEAAO,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGHA,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEN,aAAa,CAACO;AAAtB,eAAD,CAAR;AAHG;AAAA,qBAISL,KAAK,CAACM,IAAN,YAAsBJ,IAAtB,CAJT;;AAAA;AAIHK,cAAAA,GAJG;;AAKH,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEN,aAAa,CAACW;AAAtB,iBAAD,CAAR;AADsB,4BAEEF,GAAG,CAACG,IAFN,EAEdC,KAFc,aAEdA,KAFc,EAEPT,KAFO,aAEPA,IAFO;AAGtBU,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACAC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeb,KAAf,CAA7B;AACAC,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEN,aAAa,CAACkB,aADb;AAEPC,kBAAAA,OAAO,EAAE;AACPN,oBAAAA,KAAK,EAALA,KADO;AAEPT,oBAAAA,IAAI,EAAJA;AAFO;AAFF,iBAAD,CAAR;AAOD,eAZD,MAYO;AACGgB,gBAAAA,KADH,GACaX,GAAG,CAACG,IADjB,CACGQ,KADH;AAELf,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEN,aAAa,CAACqB,cAAtB;AAAsCF,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,KAAK,EAALA;AAAF;AAA/C,iBAAD,CAAR;AACD;;AApBE;AAAA;;AAAA;AAAA;AAAA;AAsBKR,cAAAA,IAtBL,GAsBc,YAAMU,QAtBpB,CAsBKV,IAtBL;AAuBHP,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEN,aAAa,CAACqB,cADb;AAEPF,gBAAAA,OAAO,EAAE;AAAEC,kBAAAA,KAAK,EAAER,IAAI,CAACQ;AAAd;AAFF,eAAD,CAAR;;AAvBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AA6BD,CA9BM;AAgCP,OAAO,IAAMG,KAAK,GAAG,SAARA,KAAQ,CAACnB,IAAD,EAAU;AAC7B;AAAA,yEAAO,kBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLA,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEN,aAAa,CAACwB;AAAtB,eAAD,CAAR;AADK;AAAA,qBAEatB,KAAK,CAACM,IAAN,8BACbJ,IADa,EAFb;;AAAA;AAECK,cAAAA,GAFD;;AAML,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AAAA,6BACED,GAAG,CAACG,IADN,EACdC,KADc,cACdA,KADc,EACPT,MADO,cACPA,IADO;AAEtBU,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AACAC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeb,MAAf,CAA7B;AACAC,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEN,aAAa,CAACkB,aADb;AAEPC,kBAAAA,OAAO,EAAE;AACPN,oBAAAA,KAAK,EAALA,KADO;AAEPT,oBAAAA,IAAI,EAAJA;AAFO;AAFF,iBAAD,CAAR;AAOD,eAXD,MAWO;AACL,oBAAIK,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBL,kBAAAA,QAAQ,CAAC;AACPC,oBAAAA,IAAI,EAAEN,aAAa,CAACyB,aADb;AAEPN,oBAAAA,OAAO,EAAE;AAAEC,sBAAAA,KAAK,EAAEX,GAAG,CAACG,IAAJ,CAASQ;AAAlB;AAFF,mBAAD,CAAR;AAID;AACF;;AAxBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AA0BD,CA3BM;AA6BP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC;AAAA,yEAAO,kBAAOrB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACCQ,cAAAA,KADD,GACSC,YAAY,CAACa,OAAb,CAAqB,OAArB,CADT;;AAEL,kBAAId,KAAJ,EAAW;AACHT,gBAAAA,IADG,GACIY,IAAI,CAACY,KAAL,CAAWd,YAAY,CAACa,OAAb,CAAqB,MAArB,CAAX,CADJ;AAETtB,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEN,aAAa,CAACkB,aADb;AAEPC,kBAAAA,OAAO,EAAE;AACPN,oBAAAA,KAAK,EAALA,KADO;AAEPT,oBAAAA,IAAI,EAAJA;AAFO;AAFF,iBAAD,CAAR;AAOD,eATD,MASO;AACLC,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEN,aAAa,CAACyB,aADb;AAEPN,kBAAAA,OAAO,EAAE;AAAEC,oBAAAA,KAAK,EAAE;AAAT;AAFF,iBAAD,CAAR;AAID;;AAhBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkBD,CAnBM;AAqBP,OAAO,IAAMS,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B;AAAA,yEAAO,kBAAOxB,QAAP;AAAA;AAAA;AAAA;AAAA;AACLA,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEN,aAAa,CAAC8B;AAAtB,eAAD,CAAR,CADK,CAEL;AACA;;AACAhB,cAAAA,YAAY,CAACiB,KAAb;AACA1B,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAEN,aAAa,CAACgC;AAAtB,eAAD,CAAR,CALK,CAML;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAfK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAiBD,CAlBM","sourcesContent":["  \r\nimport { authConstants, cartConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\n// new update signup action\r\nexport const signup = (user) => {\r\n  return async (dispatch) => {\r\n    let res;\r\n    try {\r\n      dispatch({ type: authConstants.SIGNUP_REQUEST });\r\n      res = await axios.post(`/signup`, user);\r\n      if (res.status === 201) {\r\n        dispatch({ type: authConstants.SIGNUP_SUCCESS });\r\n        const { token, user } = res.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        dispatch({\r\n          type: authConstants.LOGIN_SUCCESS,\r\n          payload: {\r\n            token,\r\n            user,\r\n          },\r\n        });\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({ type: authConstants.SIGNUP_FAILURE, payload: { error } });\r\n      }\r\n    } catch (error) {\r\n      const { data } = error.response;\r\n      dispatch({\r\n        type: authConstants.SIGNUP_FAILURE,\r\n        payload: { error: data.error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const login = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGIN_REQUEST });\r\n    const res = await axios.post(`/signin`, {\r\n      ...user,\r\n    });\r\n\r\n    if (res.status === 200) {\r\n      const { token, user } = res.data;\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      if (res.status === 400) {\r\n        dispatch({\r\n          type: authConstants.LOGIN_FAILURE,\r\n          payload: { error: res.data.error },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const isUserLoggedIn = () => {\r\n  return async (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: authConstants.LOGIN_FAILURE,\r\n        payload: { error: \"Failed to login\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const signout = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n    // localStorage.removeItem('user');\r\n    // localStorage.removeItem('token');\r\n    localStorage.clear();\r\n    dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n    // dispatch({ type: cartConstants.RESET_CART });\r\n    //const res = await axios.post(`/admin/signout`);\r\n    // if(res.status === 200){\r\n\r\n    // }else{\r\n    //     dispatch({\r\n    //         type: authConstants.LOGOUT_FAILURE,\r\n    //         payload: { error: res.data.error }\r\n    //     });\r\n    // }\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}