{"ast":null,"code":"import axiosInstance from \"../../helpers/axios\";\nimport { categoryConstants } from \"./constants\";\nexport const getAllCategories = () => {\n  return async dispatch => {\n    const res = await axiosInstance.get('/category/getcategories');\n    console.log(res);\n    dispatch({\n      type: categoryConstants.GET_CATEGORIES_REQUEST\n    });\n\n    if (res.status === 200) {\n      const {\n        categoryList\n      } = res.data;\n      dispatch({\n        type: categoryConstants.GET_CATEGORIES_SUCCESS,\n        payload: {\n          categories: categoryList\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_CATEGORIES_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const addCategory = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.ADD_NEW_CATEGORY_REQUEST\n    });\n    const res = await axiosInstance.post('/category/create', form);\n\n    if (res.status === 201) {\n      dispatch({\n        type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n        payload: res.data.category\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_CATEGORIES_FAILURE,\n        payload: res.data.error\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/categoriesActions.js"],"names":["axiosInstance","categoryConstants","getAllCategories","dispatch","res","get","console","log","type","GET_CATEGORIES_REQUEST","status","categoryList","data","GET_CATEGORIES_SUCCESS","payload","categories","GET_CATEGORIES_FAILURE","error","addCategory","form","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","category"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,GAAG,GAAG,MAAMJ,aAAa,CAACK,GAAd,CAAkB,yBAAlB,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEAD,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAEP,iBAAiB,CAACQ;AAAzB,KAAD,CAAR;;AACA,QAAGL,GAAG,CAACM,MAAJ,KAAe,GAAlB,EAAsB;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAmBP,GAAG,CAACQ,IAA7B;AACAT,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEP,iBAAiB,CAACY,sBADnB;AAELC,QAAAA,OAAO,EAAE;AAACC,UAAAA,UAAU,EAAEJ;AAAb;AAFJ,OAAD,CAAR;AAIH,KAND,MAMK;AACDR,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEP,iBAAiB,CAACe,sBADnB;AAELF,QAAAA,OAAO,EAAE;AAACG,UAAAA,KAAK,EAAEb,GAAG,CAACQ,IAAJ,CAASK;AAAjB;AAFJ,OAAD,CAAR;AAIH;AACJ,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO,MAAMhB,QAAN,IAAkB;AACrBA,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAEP,iBAAiB,CAACmB;AAAzB,KAAD,CAAR;AACA,UAAMhB,GAAG,GAAG,MAAMJ,aAAa,CAACqB,IAAd,CAAmB,kBAAnB,EAAuCF,IAAvC,CAAlB;;AACA,QAAGf,GAAG,CAACM,MAAJ,KAAe,GAAlB,EAAsB;AAClBP,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEP,iBAAiB,CAACqB,wBADnB;AAELR,QAAAA,OAAO,EAAEV,GAAG,CAACQ,IAAJ,CAASW;AAFb,OAAD,CAAR;AAIH,KALD,MAKK;AACDpB,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEP,iBAAiB,CAACe,sBADnB;AAELF,QAAAA,OAAO,EAAEV,GAAG,CAACQ,IAAJ,CAASK;AAFb,OAAD,CAAR;AAIH;AACJ,GAdD;AAeH,CAhBM","sourcesContent":["import axiosInstance from \"../../helpers/axios\"\r\nimport { categoryConstants } from \"./constants\"\r\n\r\nexport const getAllCategories = () => {\r\n    return async dispatch => {\r\n        const res = await axiosInstance.get('/category/getcategories')\r\n        console.log(res)\r\n\r\n        dispatch({type: categoryConstants.GET_CATEGORIES_REQUEST})\r\n        if(res.status === 200){\r\n            const { categoryList } = res.data\r\n            dispatch({\r\n                type: categoryConstants.GET_CATEGORIES_SUCCESS,\r\n                payload: {categories: categoryList}\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type: categoryConstants.GET_CATEGORIES_FAILURE,\r\n                payload: {error: res.data.error}\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({type: categoryConstants.ADD_NEW_CATEGORY_REQUEST})\r\n        const res = await axiosInstance.post('/category/create', form)\r\n        if(res.status === 201){\r\n            dispatch({\r\n                type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\r\n                payload: res.data.category\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type: categoryConstants.GET_CATEGORIES_FAILURE,\r\n                payload: res.data.error\r\n            })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}