{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axiosInstance from \"../../helpers/axios\";\nimport { productConstants } from \"./constants\"; // export const addProduct = (form) => {\n//     return async dispatch => {\n//         dispatch({type: productConstants.ADD_NEW_PRODUCT_REQUEST})\n//         const res = await axiosInstance.post('/product/create', form)\n//         if(res.status === 201){\n//             dispatch({\n//                 type: productConstants.ADD_NEW_PRODUCT_SUCCESS,\n//                 payload: {category: res.data.category} \n//             })\n//         }else{\n//             dispatch({\n//                 type: categoryConstants.GET_CATEGORIES_FAILURE,\n//                 payload: res.data.error\n//             })\n//         }\n//     }\n// }\n\nexport var addProduct = function addProduct(form) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axiosInstance.post('product/create', form);\n\n            case 2:\n              res = _context.sent;\n              console.log(res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/productsActions.js"],"names":["axiosInstance","productConstants","addProduct","form","dispatch","post","res","console","log"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,SAASC,gBAAT,QAAiC,aAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAChC;AAAA,wEAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeJ,aAAa,CAACK,IAAd,CAAmB,gBAAnB,EAAqCF,IAArC,CADf;;AAAA;AACGG,cAAAA,GADH;AAEHC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAIH,CALM","sourcesContent":["import axiosInstance from \"../../helpers/axios\"\r\nimport { productConstants } from \"./constants\"\r\n\r\n// export const addProduct = (form) => {\r\n//     return async dispatch => {\r\n//         dispatch({type: productConstants.ADD_NEW_PRODUCT_REQUEST})\r\n//         const res = await axiosInstance.post('/product/create', form)\r\n//         if(res.status === 201){\r\n//             dispatch({\r\n//                 type: productConstants.ADD_NEW_PRODUCT_SUCCESS,\r\n//                 payload: {category: res.data.category} \r\n//             })\r\n//         }else{\r\n//             dispatch({\r\n//                 type: categoryConstants.GET_CATEGORIES_FAILURE,\r\n//                 payload: res.data.error\r\n//             })\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const addProduct = (form) => {\r\n    return async dispatch => {\r\n        const res = await axiosInstance.post('product/create', form)\r\n        console.log(res)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}