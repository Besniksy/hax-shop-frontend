{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\besni\\\\Desktop\\\\hax-frontend\\\\src\\\\components\\\\ProductThumb\\\\ProductGridWrapper.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment, useEffect } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getDiscountPrice } from \"../../lib/product\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist, deleteFromWishlist } from \"../../redux/actions/wishlistActions\";\nimport { addToCompare, deleteFromCompare } from \"../../redux/actions/compareActions\";\nimport ProductGrid from \"./ProductGrid\";\nimport { getProductsBySlug } from \"../../redux/actions/productsActions\";\nimport router from 'next/router';\n\nconst ProductGridWrapper = ({\n  products,\n  bottomSpace,\n  addToCart,\n  addToWishlist,\n  deleteFromWishlist,\n  addToCompare,\n  deleteFromCompare,\n  cartItems,\n  wishlistItems,\n  compareItems,\n  column\n}) => {\n  const {\n    addToast\n  } = useToasts();\n  const apiProducts = useSelector(state => state.product);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(apiProducts);\n    console.log(router.query);\n    dispatch(getProductsBySlug(path));\n  }, []);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, products && products.map(product => {\n    const discountedPrice = getDiscountPrice(product.price, product.discount).toFixed(2);\n    const productPrice = product.price.toFixed(2);\n    const cartItem = cartItems.filter(cartItem => cartItem.id === product.id)[0];\n    const wishlistItem = wishlistItems.filter(wishlistItem => wishlistItem.id === product.id)[0];\n    const compareItem = compareItems.filter(compareItem => compareItem.id === product.id)[0];\n    return __jsx(ProductGrid, {\n      key: product.id,\n      product: product,\n      discountedPrice: discountedPrice,\n      productPrice: productPrice,\n      cartItem: cartItem,\n      wishlistItem: wishlistItem,\n      compareItem: compareItem,\n      bottomSpace: bottomSpace,\n      addToCart: addToCart,\n      addToWishlist: addToWishlist,\n      deleteFromWishlist: deleteFromWishlist,\n      addToCompare: addToCompare,\n      deleteFromCompare: deleteFromCompare,\n      addToast: addToast,\n      cartItems: cartItems,\n      column: column,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    });\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    compareItems: state.compareData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (item, addToast, quantityCount, selectedProductColor, selectedProductSize) => {\n      dispatch(addToCart(item, addToast, quantityCount, selectedProductColor, selectedProductSize));\n    },\n    addToWishlist: (item, addToast) => {\n      dispatch(addToWishlist(item, addToast));\n    },\n    deleteFromWishlist: (item, addToast) => {\n      dispatch(deleteFromWishlist(item, addToast));\n    },\n    addToCompare: (item, addToast) => {\n      dispatch(addToCompare(item, addToast));\n    },\n    deleteFromCompare: (item, addToast) => {\n      dispatch(deleteFromCompare(item, addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridWrapper);","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/components/ProductThumb/ProductGridWrapper.js"],"names":["Fragment","useEffect","connect","useDispatch","useSelector","useToasts","getDiscountPrice","addToCart","addToWishlist","deleteFromWishlist","addToCompare","deleteFromCompare","ProductGrid","getProductsBySlug","router","ProductGridWrapper","products","bottomSpace","cartItems","wishlistItems","compareItems","column","addToast","apiProducts","state","product","dispatch","console","log","query","path","map","discountedPrice","price","discount","toFixed","productPrice","cartItem","filter","id","wishlistItem","compareItem","mapStateToProps","cartData","wishlistData","compareData","mapDispatchToProps","item","quantityCount","selectedProductColor","selectedProductSize"],"mappings":"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","sourcesContent":["import { Fragment, useEffect } from \"react\";\r\n\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getDiscountPrice } from \"../../lib/product\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport {\r\n  addToWishlist,\r\n  deleteFromWishlist\r\n} from \"../../redux/actions/wishlistActions\";\r\nimport {\r\n  addToCompare,\r\n  deleteFromCompare\r\n} from \"../../redux/actions/compareActions\";\r\nimport ProductGrid from \"./ProductGrid\";\r\nimport { getProductsBySlug } from \"../../redux/actions/productsActions\";\r\nimport router from 'next/router'\r\n\r\n\r\nconst ProductGridWrapper = ({\r\n  products,\r\n  bottomSpace,\r\n  addToCart,\r\n  addToWishlist,\r\n  deleteFromWishlist,\r\n  addToCompare,\r\n  deleteFromCompare,\r\n  cartItems,\r\n  wishlistItems,\r\n  compareItems,\r\n  column\r\n}) => {\r\n  const { addToast } = useToasts();\r\n  \r\n  \r\n  const apiProducts = useSelector(state => state.product)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    console.log(apiProducts)\r\n    console.log(router.query)\r\n    \r\n    dispatch(getProductsBySlug(path))\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      {products &&\r\n        products.map((product) => {\r\n          const discountedPrice = getDiscountPrice(\r\n            product.price,\r\n            product.discount\r\n          ).toFixed(2);\r\n          const productPrice = product.price.toFixed(2);\r\n          const cartItem = cartItems.filter(\r\n            (cartItem) => cartItem.id === product.id\r\n          )[0];\r\n          const wishlistItem = wishlistItems.filter(\r\n            (wishlistItem) => wishlistItem.id === product.id\r\n          )[0];\r\n          const compareItem = compareItems.filter(\r\n            (compareItem) => compareItem.id === product.id\r\n          )[0];\r\n\r\n          return (\r\n            <ProductGrid\r\n              key={product.id}\r\n              product={product}\r\n              discountedPrice={discountedPrice}\r\n              productPrice={productPrice}\r\n              cartItem={cartItem}\r\n              wishlistItem={wishlistItem}\r\n              compareItem={compareItem}\r\n              bottomSpace={bottomSpace}\r\n              addToCart={addToCart}\r\n              addToWishlist={addToWishlist}\r\n              deleteFromWishlist={deleteFromWishlist}\r\n              addToCompare={addToCompare}\r\n              deleteFromCompare={deleteFromCompare}\r\n              addToast={addToast}\r\n              cartItems={cartItems}\r\n              column={column}\r\n            />\r\n          );\r\n        })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    compareItems: state.compareData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (\r\n      item,\r\n      addToast,\r\n      quantityCount,\r\n      selectedProductColor,\r\n      selectedProductSize\r\n    ) => {\r\n      dispatch(\r\n        addToCart(\r\n          item,\r\n          addToast,\r\n          quantityCount,\r\n          selectedProductColor,\r\n          selectedProductSize\r\n        )\r\n      );\r\n    },\r\n    addToWishlist: (item, addToast) => {\r\n      dispatch(addToWishlist(item, addToast));\r\n    },\r\n    deleteFromWishlist: (item, addToast) => {\r\n      dispatch(deleteFromWishlist(item, addToast));\r\n    },\r\n    addToCompare: (item, addToast) => {\r\n      dispatch(addToCompare(item, addToast));\r\n    },\r\n    deleteFromCompare: (item, addToast) => {\r\n      dispatch(deleteFromCompare(item, addToast));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridWrapper);\r\n"]},"metadata":{},"sourceType":"module"}