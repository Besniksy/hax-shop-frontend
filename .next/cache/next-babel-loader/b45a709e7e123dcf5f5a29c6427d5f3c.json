{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { categoryConstants } from \"../actions/constants\";\nvar initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nvar buildNewCategories = function buildNewCategories(parentId, categories, category) {\n  var myCategories = [];\n\n  if (parentId == undefined) {\n    return [].concat(_toConsumableArray(categories), [{\n      _id: category._id,\n      name: category.name,\n      slug: category.slug,\n      categoryImage: category.categoryImage,\n      children: []\n    }]);\n  }\n\n  var _iterator = _createForOfIteratorHelper(categories),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cat = _step.value;\n\n      if (cat._id == parentId) {\n        myCategories.push(_objectSpread(_objectSpread({}, cat), {}, {\n          children: cat.children ? buildNewCategories(parentId, [].concat(_toConsumableArray(cat.children), [{\n            _id: category._id,\n            name: category.name,\n            slug: category.slug,\n            parentId: category.parentId,\n            categoryImage: category.categoryImage,\n            children: category.children\n          }]), category) : []\n        }));\n      } else {\n        myCategories.push(_objectSpread(_objectSpread({}, cat), {}, {\n          children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n        }));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return myCategories;\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case categoryConstants.GET_CATEGORIES_SUCCESS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        categories: action.payload.categories\n      });\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      var category = action.payload.category;\n      var updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n      console.log(updatedCategories);\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        categories: updatedCategories,\n        loading: false\n      });\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = _objectSpread({}, initState);\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/reducers/categoriesReducer.js"],"names":["categoryConstants","initState","categories","loading","error","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","categoryImage","children","cat","push","state","action","type","GET_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","console","log","ADD_NEW_CATEGORY_FAILURE"],"mappings":"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","sourcesContent":["import { categoryConstants } from \"../actions/constants\"\r\n\r\nconst initState = { \r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst buildNewCategories = (parentId, categories, category ) => {\r\n    let myCategories = []\r\n\r\n    if(parentId == undefined){\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                categoryImage: category.categoryImage,\r\n                children: []\r\n            }\r\n        ]\r\n    }\r\n\r\n    for(let cat of categories){\r\n\r\n        if(cat._id == parentId){\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, [...cat.children, {\r\n                    _id: category._id,\r\n                    name: category.name,\r\n                    slug: category.slug,\r\n                    parentId: category.parentId,\r\n                    categoryImage: category.categoryImage,\r\n                    children: category.children\r\n                }], category) : []\r\n            })\r\n        }else {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return myCategories\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type){\r\n        case categoryConstants.GET_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break\r\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break\r\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const category = action.payload.category\r\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category)\r\n            console.log(updatedCategories)\r\n            state = {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false\r\n            }\r\n            break\r\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break\r\n    }\r\n    return state\r\n}"]},"metadata":{},"sourceType":"module"}