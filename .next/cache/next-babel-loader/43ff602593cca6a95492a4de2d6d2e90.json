{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"../../helpers/axios\";\nimport { authConstants } from \"./constants\";\nexport var login = function login(user) {\n  console.log(user);\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, _res$data, token, _user;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: authConstants.LOGIN_REQUEST\n              });\n              _context.next = 3;\n              return axios.post('/admin/signin', _objectSpread({}, user));\n\n            case 3:\n              res = _context.sent;\n\n              if (res.status === 200) {\n                _res$data = res.data, token = _res$data.token, _user = _res$data.user;\n                localStorage.setItem('token', token);\n                localStorage.setItem('user', JSON.stringify(_user));\n                dispatch({\n                  type: authConstants.LOGIN_SUCCESS,\n                  payload: {\n                    token: token,\n                    user: _user\n                  }\n                });\n              } else {\n                if (res.status === 400) {\n                  dispatch({\n                    type: authConstants.LOGIN_FAILURE,\n                    payload: {\n                      error: res.data.error\n                    }\n                  });\n                }\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var isUserLoggedIn = function isUserLoggedIn() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var token, user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              token = localStorage.getItem('token');\n\n              if (token) {\n                user = JSON.parse(localStorage.getItem('user'));\n                dispatch({\n                  type: authConstants.LOGIN_SUCCESS,\n                  payload: {\n                    token: token,\n                    user: user\n                  }\n                });\n              } else {\n                dispatch({\n                  type: authConstants.LOGIN_FAILURE,\n                  payload: {\n                    error: 'Failed to login'\n                  }\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var signout = function signout() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              localStorage.clear();\n              dispatch({\n                type: authConstants.LOGOUT_REQUEST\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/authActions.js"],"names":["axios","authConstants","login","user","console","log","dispatch","type","LOGIN_REQUEST","post","res","status","data","token","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","isUserLoggedIn","getItem","parse","signout","clear","LOGOUT_REQUEST"],"mappings":"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","sourcesContent":["import axios from \"../../helpers/axios\"\r\nimport { authConstants } from \"./constants\"\r\n\r\nexport const login = ( user) => {\r\n\r\n    console.log(user)\r\n    return async (dispatch) => {\r\n\r\n        dispatch({type: authConstants.LOGIN_REQUEST})\r\n        const res = await axios.post('/admin/signin', {\r\n            ...user\r\n        })\r\n\r\n        if(res.status === 200){\r\n            const {token, user } = res.data\r\n            localStorage.setItem('token', token)\r\n            localStorage.setItem('user', JSON.stringify(user))\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            })\r\n        }else{\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: {error: res.data.error}\r\n                })\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(token){\r\n            const user = JSON.parse(localStorage.getItem('user'))\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            })\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGIN_FAILURE,\r\n                payload: {error: 'Failed to login'}\r\n            })\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const signout = () => {\r\n    return async dispatch => {\r\n        localStorage.clear()\r\n        dispatch({\r\n            type: authConstants.LOGOUT_REQUEST\r\n        })\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}