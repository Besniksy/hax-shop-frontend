{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { categoryConstants } from \"../actions/constants\";\nvar initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nvar buildNewCategories = function buildNewCategories(categories, category) {\n  var myCategories = [];\n\n  var _iterator = _createForOfIteratorHelper(categories),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cat = _step.value;\n      myCategories.push(_objectSpread(_objectSpread({}, cat), {}, {\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(cat.children, category) : []\n      }));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return myCategories;\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  switch (action.type) {\n    case categoryConstants.GET_CATEGORIES_SUCCESS:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        categories: action.payload.categories\n      });\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      var updatedCategories = buildNewCategories(state.categories, action.payload.category);\n      console.log(updatedCategories);\n      state = _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = _objectSpread({}, initState);\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/reducers/categoriesReducer.js"],"names":["categoryConstants","initState","categories","loading","error","buildNewCategories","category","myCategories","cat","push","children","length","state","action","console","log","type","GET_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","ADD_NEW_CATEGORY_FAILURE"],"mappings":";;;;;;;;;;;;AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,EADE;AAEdC,EAAAA,OAAO,EAAE,KAFK;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAlB;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACH,UAAD,EAAaI,QAAb,EAA2B;AAClD,MAAIC,YAAY,GAAG,EAAnB;;AADkD,6CAGnCL,UAHmC;AAAA;;AAAA;AAGlD,wDAA0B;AAAA,UAAlBM,GAAkB;AACtBD,MAAAA,YAAY,CAACE,IAAb,iCACOD,GADP;AAEIE,QAAAA,QAAQ,EAAEF,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaC,MAAb,GAAsB,CAAtC,GAA0CN,kBAAkB,CAACG,GAAG,CAACE,QAAL,EAAeJ,QAAf,CAA5D,GAAuF;AAFrG;AAIH;AARiD;AAAA;AAAA;AAAA;AAAA;;AAUlD,SAAOC,YAAP;AACH,CAXD;;AAaA,gBAAe,YAA+B;AAAA,MAA9BK,KAA8B,uEAAtBX,SAAsB;AAAA,MAAXY,MAAW;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAOA,MAAM,CAACG,IAAd;AACI,SAAKhB,iBAAiB,CAACiB,sBAAvB;AACIL,MAAAA,KAAK,mCACEA,KADF;AAEDV,QAAAA,UAAU,EAAEW,MAAM,CAACK,OAAP,CAAehB;AAF1B,QAAL;AAIA;;AACJ,SAAKF,iBAAiB,CAACmB,wBAAvB;AACIP,MAAAA,KAAK,mCACEA,KADF;AAEDT,QAAAA,OAAO,EAAE;AAFR,QAAL;AAIA;;AACJ,SAAKH,iBAAiB,CAACoB,wBAAvB;AACI,UAAMC,iBAAiB,GAAGhB,kBAAkB,CAACO,KAAK,CAACV,UAAP,EAAmBW,MAAM,CAACK,OAAP,CAAeZ,QAAlC,CAA5C;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYM,iBAAZ;AACAT,MAAAA,KAAK,mCACEA,KADF;AAEDT,QAAAA,OAAO,EAAE;AAFR,QAAL;AAIA;;AACJ,SAAKH,iBAAiB,CAACsB,wBAAvB;AACIV,MAAAA,KAAK,qBACEX,SADF,CAAL;AAGA;AAzBR;;AA2BA,SAAOW,KAAP;AACH,CA9BD","sourcesContent":["import { categoryConstants } from \"../actions/constants\"\r\n\r\nconst initState = { \r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst buildNewCategories = (categories, category ) => {\r\n    let myCategories = []\r\n\r\n    for(let cat of categories){\r\n        myCategories.push({\r\n            ...cat,\r\n            children: cat.children && cat.children.length > 0 ? buildNewCategories(cat.children, category) : []\r\n        })\r\n    }\r\n\r\n    return myCategories\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    console.log(action)\r\n    switch(action.type){\r\n        case categoryConstants.GET_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break\r\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break\r\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const updatedCategories = buildNewCategories(state.categories, action.payload.category)\r\n            console.log(updatedCategories)\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break\r\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break\r\n    }\r\n    return state\r\n}"]},"metadata":{},"sourceType":"module"}