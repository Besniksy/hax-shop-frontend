{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { authConstants } from \"./constants\";\nexport const login = user => {\n  console.log(user);\n  return dispatch => {\n    dispatch({\n      type: \"diqka\",\n      payload: _objectSpread({}, user)\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/besni/Desktop/hax-frontend/src/redux/actions/authActions.js"],"names":["authConstants","login","user","console","log","dispatch","type","payload"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAQG,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,OAAO,oBACAL,IADA;AAFF,KAAD,CAAR;AAMH,GAPD;AAQH,CAXM","sourcesContent":["import { authConstants } from \"./constants\"\r\n\r\nexport const login = (user) => {\r\n\r\n    console.log(user)\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"diqka\",\r\n            payload: {\r\n                ...user\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}